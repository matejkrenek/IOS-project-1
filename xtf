#!/bin/bash

# Configurations
POSIXLY_CORRECT=yes
DATETIME_FORMAT=^[0-9]{4}-[0-9]{2}-[0-9]{2}\ [0-9]{2}:[0-9]{2}:[0-9]{2}$

# Parameters
USER=""
COMMAND="list"
DATETIME_AFTER=""
DATETIME_BEFORE=""
CURRENCIES=()
LOGS=()
PARAMS=()
XTF_PROFIT=${XTF_PROFIT:=20}

print_help() {
    echo ""
    echo "Usage: $0 [-h|--help] [FILTR] [PŘÍKAZ] UŽIVATEL LOG [LOG2 [...]]"
    echo "Options:"
    echo "  -h, --help       Display this help message"
    echo "  FILTR            Options: -a DATETIME, -b DATETIME, -c CURRENCY"
    echo "  PŘÍKAZ           Command: list, list-currency, status, profit"
    echo "  UŽIVATEL         User identifier"
    echo "  LOG              List of .log files"
    echo ""
    exit 0
}

print_error() {
    echo "Error: $1" >&2
    exit 1
}

validate_datatime() {
    if ! [[ $1 =~ $DATETIME_FORMAT ]]; then
        print_error "Invalid datetime format of $2 (Should be YYYY-DD-MM HH:MM:SS)"
    fi
}

process() {
    local QUERY="awk -v username=\"$USER\" -v currencies=\"$(IFS='|'; echo "${CURRENCIES[*]}")\" -v datetime_after=\"$DATETIME_AFTER\" -v datetime_before=\"$DATETIME_BEFORE\" -v profit=\"$XTF_PROFIT\" -F \";\" "

    QUERY+="'\$1 == username"

    if [[ ${#CURRENCIES[@]} -gt 0 ]]; then
        QUERY+=" && (\$3 ~ \"^(\"currencies\")$\")"
    fi

    if [[ -n "$DATETIME_AFTER" ]]; then
        QUERY+=" && (\$2 > \"$DATETIME_AFTER\")"
    fi

    if [[ -n "$DATETIME_BEFORE" ]]; then
        QUERY+=" && (\$2 < \"$DATETIME_BEFORE\")"
    fi

    if [[ $COMMAND == "list-currency" ]]; then
        QUERY+=" { print \$3 }' | sort | uniq"
    elif [[ $COMMAND == "status" ]]; then
        QUERY+=" { sum[\$3] += \$4 } END { for (currency in sum) print currency, sum[currency] }' | sort"
    elif [[ $COMMAND == "profit" ]]; then
        QUERY+=" { if (\$4 > 0) { sum[\$3] += \$4 * (1 + profit/100) } else { sum[\$3] += \$4 } } END { for (currency in sum) print currency, sum[currency] }' | sort"
    else
        QUERY+=" { print \$0 }'"
    fi

    eval "$QUERY"
}

if [[ $# -eq 0 ]]; then
    print_help
fi

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            print_help
            ;;
        -a)
            if [[ -z "$2" ]]; then
                print_error "Filter $1 requires a value"
            fi

            validate_datatime "$2" "$1"
            DATETIME_AFTER=$2
            shift 2
            ;;
        -b)
            if [[ -z "$2" ]]; then
                print_error "Filter $1 requires a value"
            fi

            validate_datatime "$2" "$1"
            DATETIME_BEFORE=$2
            shift 2
            ;;
        -c)
            if [[ -z "$2" ]]; then
                print_error "Filter $1 requires a value"
            fi

            CURRENCIES+=("$2")
            shift 2
            ;;
        list|list-currency|status|profit)
            COMMAND=$1
            shift
            ;;
        *)
            PARAMS+=("$1")
            shift
            ;;
    esac
done

for param in "${PARAMS[@]}"; do
    if [[ $param == "${PARAMS[0]}" && -z "$USER" ]]; then
        USER=$param
    else
        LOGS+=($param)
    fi
done

if [[ -z "$USER" ]]; then
    print_error "Username is not defined"
fi


for log in "${LOGS[@]}"; do
    if [[ -f "$log" ]]; then
        if [[ "$log" == *.gz ]]; then
            gunzip -c "$log"
        else
            cat "$log"
            echo ""
        fi
    fi
done | process